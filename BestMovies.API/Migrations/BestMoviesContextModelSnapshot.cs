// <auto-generated />
using BestMovies.API.DBContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BestMovies.API.Migrations
{
    [DbContext(typeof(BestMoviesContext))]
    partial class BestMoviesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.4");

            modelBuilder.Entity("BestMovies.API.Entities.Director", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Directors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Steven Spielberg"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Martin Scorsese"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Alfred Hitchcock"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Stanley Kubrick"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Francis Ford Coppola"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Woody Allen"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Billy Wilder"
                        },
                        new
                        {
                            Id = 8,
                            Name = "John Huston"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Peter Jackson"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Milos Forman"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Clint Eastwood"
                        },
                        new
                        {
                            Id = 12,
                            Name = "David Lean"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Ingmar Bergman"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Joel Coen"
                        },
                        new
                        {
                            Id = 15,
                            Name = "John Ford"
                        },
                        new
                        {
                            Id = 16,
                            Name = "James Cameron"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Sidney Lumet"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Charles Chaplin"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Tim Burton"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Roman Polanski"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Quentin Tarantino"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Danny Boyle"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Ridley Scott"
                        },
                        new
                        {
                            Id = 24,
                            Name = "David Fincher"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Christopher Nolan"
                        });
                });

            modelBuilder.Entity("BestMovies.API.Entities.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Rating")
                        .HasColumnType("REAL");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Rating = 9.0,
                            Title = "Schindler's List",
                            Year = 1993
                        },
                        new
                        {
                            Id = 2,
                            Rating = 7.5999999999999996,
                            Title = "Killers of the Flower Moon",
                            Year = 2023
                        },
                        new
                        {
                            Id = 3,
                            Rating = 8.5,
                            Title = "Psycho",
                            Year = 1960
                        },
                        new
                        {
                            Id = 4,
                            Rating = 8.3000000000000007,
                            Title = "2001: A Space Odyssey",
                            Year = 1968
                        },
                        new
                        {
                            Id = 5,
                            Rating = 8.4000000000000004,
                            Title = "Apocalypse Now",
                            Year = 1979
                        },
                        new
                        {
                            Id = 6,
                            Rating = 8.0,
                            Title = "Annie Hall",
                            Year = 1977
                        },
                        new
                        {
                            Id = 7,
                            Rating = 8.3000000000000007,
                            Title = "The Apartment",
                            Year = 1960
                        },
                        new
                        {
                            Id = 8,
                            Rating = 8.1999999999999993,
                            Title = "The Treasure of the Sierra Madre",
                            Year = 1948
                        },
                        new
                        {
                            Id = 9,
                            Rating = 8.9000000000000004,
                            Title = "The Lord of the Rings: The Fellowship of the Ring",
                            Year = 2001
                        },
                        new
                        {
                            Id = 10,
                            Rating = 8.6999999999999993,
                            Title = "One Flew Over the Cuckoo's Nest",
                            Year = 1975
                        });
                });

            modelBuilder.Entity("DirectorMovie", b =>
                {
                    b.Property<int>("DirectorsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MoviesId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DirectorsId", "MoviesId");

                    b.HasIndex("MoviesId");

                    b.ToTable("DirectorMovie");

                    b.HasData(
                        new
                        {
                            DirectorsId = 1,
                            MoviesId = 1
                        },
                        new
                        {
                            DirectorsId = 2,
                            MoviesId = 2
                        },
                        new
                        {
                            DirectorsId = 3,
                            MoviesId = 3
                        },
                        new
                        {
                            DirectorsId = 4,
                            MoviesId = 4
                        },
                        new
                        {
                            DirectorsId = 5,
                            MoviesId = 5
                        },
                        new
                        {
                            DirectorsId = 6,
                            MoviesId = 6
                        },
                        new
                        {
                            DirectorsId = 7,
                            MoviesId = 7
                        },
                        new
                        {
                            DirectorsId = 8,
                            MoviesId = 8
                        },
                        new
                        {
                            DirectorsId = 9,
                            MoviesId = 9
                        },
                        new
                        {
                            DirectorsId = 10,
                            MoviesId = 10
                        });
                });

            modelBuilder.Entity("DirectorMovie", b =>
                {
                    b.HasOne("BestMovies.API.Entities.Director", null)
                        .WithMany()
                        .HasForeignKey("DirectorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BestMovies.API.Entities.Movie", null)
                        .WithMany()
                        .HasForeignKey("MoviesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
